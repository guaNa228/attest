// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: query.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getPreAttestationData = `-- name: GetPreAttestationData :many
SELECT u.id as student_id,
    sa.id as semester_activity_id
FROM users u,
    semester_activity sa
WHERE u.group_id = sa.group_id
`

type GetPreAttestationDataRow struct {
	StudentID          uuid.UUID
	SemesterActivityID uuid.UUID
}

func (q *Queries) GetPreAttestationData(ctx context.Context) ([]GetPreAttestationDataRow, error) {
	rows, err := q.db.QueryContext(ctx, getPreAttestationData)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetPreAttestationDataRow
	for rows.Next() {
		var i GetPreAttestationDataRow
		if err := rows.Scan(&i.StudentID, &i.SemesterActivityID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
