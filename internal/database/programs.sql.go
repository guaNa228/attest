// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: query.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createProgram = `-- name: CreateProgram :one
INSERT INTO programs (
        id,
		name,
  		max_courses	
    )
VALUES ($1, $2, $3)
RETURNING id, name, max_courses
`

type CreateProgramParams struct {
	ID         uuid.UUID
	Name       string
	MaxCourses int16
}

func (q *Queries) CreateProgram(ctx context.Context, arg CreateProgramParams) (Program, error) {
	row := q.db.QueryRowContext(ctx, createProgram, arg.ID, arg.Name, arg.MaxCourses)
	var i Program
	err := row.Scan(&i.ID, &i.Name, &i.MaxCourses)
	return i, err
}

const getProgramsNumber = `-- name: GetProgramsNumber :one
SELECT COUNT(*)
FROM programs
`

func (q *Queries) GetProgramsNumber(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, getProgramsNumber)
	var count int64
	err := row.Scan(&count)
	return count, err
}
